{"version":3,"sources":["shared/components/FormElements/ImageUpload.jsx","places/pages/NewPlace.jsx","shared/components/FormElements/Button.jsx","shared/hooks/http-hook.js","shared/components/UIElements/Modal.jsx","shared/components/UIElements/ErrorModal.jsx","shared/utils/validators.js.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/hooks/form-hook.js","shared/components/FormElements/Input.jsx"],"names":["ImageUpload","props","useState","file","setFile","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","className","id","ref","style","display","type","accept","onChange","event","pickedFile","fileIsValid","target","files","length","onInput","center","src","alt","onClick","current","click","errorText","NewPlace","userId","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useForm","title","value","address","description","image","formState","inputHandler","history","useHistory","placeSubmitHandler","e","a","preventDefault","formData","FormData","append","inputs","process","push","onClear","onSubmit","asOverlay","element","label","validators","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","disabled","Button","href","size","inverse","danger","children","to","exact","token","setLoading","setError","config","headers","authToken","useCallback","url","reqMethod","body","axios","post","res","get","patch","delete","console","log","data","response","message","ModalOverlay","headerClass","header","contentClass","footerClass","footer","content","ReactDOM","createPortal","document","getElementById","Modal","show","onCancel","in","mountOnEnter","unmountOnExit","timeout","classNames","ErrorModal","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","val","VALIDATOR_EMAIL","validate","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","formReducer","state","action","formIsValid","inputId","initialInputs","initialFormValidity","useReducer","dispatch","inputData","formValidity","inputReducer","isTouched","Input","inputState","changeHandler","touchHandler","placeholder","onBlur","rows","htmlFor"],"mappings":"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","file":"static/js/5.1ea5d420.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport Button from \"./Button\";\r\nimport \"../../../css/shared/FormElements/ImageUpload.css\";\r\n\r\nconst ImageUpload = (props) => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = (event) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className='form-control'>\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        type='file'\r\n        accept='.jpg,.png,.jpeg'\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className='image-upload__preview'>\r\n          {previewUrl && <img src={previewUrl} alt='Preview' />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type='button' onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { Fragment, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/authContext\";\r\n\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH,\r\n} from \"../../shared/utils/validators.js\";\r\n\r\nimport \"../../css/places/pages/PlaceForm.css\";\r\n\r\nconst NewPlace = () => {\r\n  const authContext = useContext(AuthContext);\r\n  const { userId } = authContext;\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n  const history = useHistory();\r\n  const placeSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"title\", formState.inputs.title.value);\r\n      formData.append(\"description\", formState.inputs.description.value);\r\n      formData.append(\"image\", formState.inputs.image.value);\r\n      formData.append(\"address\", formState.inputs.address.value);\r\n\r\n      const res = await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places`,\r\n        \"post\",\r\n        formData\r\n      );\r\n      // redirect to my places page //\r\n      history.push(`${userId}/places`);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form className='place-form' onSubmit={placeSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id='title'\r\n          element='input'\r\n          type='text'\r\n          label='Title'\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText='Please enter a valid title.'\r\n          onInput={inputHandler}\r\n        />\r\n\r\n        <Input\r\n          id='address'\r\n          element='input'\r\n          type='text'\r\n          label='Address'\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText='Please enter a valid address.'\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id='description'\r\n          element='textarea'\r\n          label='Description'\r\n          validators={[VALIDATOR_MINLENGTH(10)]}\r\n          errorText='Please enter a valid description (at least 5 characters).'\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload\r\n          center\r\n          onInput={inputHandler}\r\n          id='image'\r\n          errorText='Please Provide An Image'\r\n        />\r\n        <Button type='submit' disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NewPlace;\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"../../../css/shared/FormElements/Button.css\";\n\nconst Button = (props) => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || \"default\"} ${\n          props.inverse && \"button--inverse\"\n        } ${props.danger && \"button--danger\"}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || \"default\"} ${\n          props.inverse && \"button--inverse\"\n        } ${props.danger && \"button--danger\"}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || \"default\"} ${\n        props.inverse && \"button--inverse\"\n      } ${props.danger && \"button--danger\"}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useState, useCallback, useRef, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { TokenExpiredError } from \"jsonwebtoken\";\r\nimport { AuthContext } from \"../../shared/context/authContext\";\r\n\r\nexport const useHttpClient = () => {\r\n  const authContext = useContext(AuthContext);\r\n  const { token } = authContext;\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  //const activeHttpRequest = useRef([]);\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n  };\r\n  const authToken = {\r\n    headers: {\r\n      \"x-auth-token\": token,\r\n    },\r\n  };\r\n\r\n  const sendRequest = useCallback(async (url, reqMethod, body = null) => {\r\n    setLoading(true);\r\n    // @todo -> HttpAbortController\r\n    try {\r\n      let res;\r\n      if (reqMethod === \"post\") {\r\n        res = await axios.post(url, body, config);\r\n      } else if (reqMethod === \"get\") {\r\n        res = await axios.get(url);\r\n      } else if (reqMethod === \"patch\") {\r\n        res = await axios.patch(url, body, config);\r\n      } else if (reqMethod === \"delete\") {\r\n        res = await axios.delete(url, authToken);\r\n        console.log(res);\r\n      } else {\r\n        console.log(\"no request match\");\r\n      }\r\n      setLoading(false);\r\n      return res.data;\r\n    } catch (err) {\r\n      console.error(err.response.data);\r\n      setLoading(false);\r\n      setError(err.response.data.message);\r\n      throw err.response.data;\r\n    }\r\n  }, []);\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n  return {\r\n    isLoading,\r\n    error,\r\n    sendRequest,\r\n    clearError,\r\n  };\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n// components //\r\nimport Backdrop from \"./Backdrop\";\r\n\r\nimport \"../../../css/shared/UIElements/Modal.css\";\r\n\r\nconst ModalOverlay = ({\r\n  className,\r\n  style,\r\n  headerClass,\r\n  header,\r\n  onSubmit,\r\n  contentClass,\r\n  footerClass,\r\n  footer,\r\n  children,\r\n}) => {\r\n  const content = (\r\n    <div className={`modal ${className}`} style={{ style }}>\r\n      <header className={`modal__header ${headerClass}`}>\r\n        <h2> {header} </h2>\r\n      </header>\r\n      <form onSubmit={onSubmit ? onSubmit : (e) => e.preventDefault()}>\r\n        <div className={`modal__content ${contentClass}`}>{children}</div>\r\n        <footer className={`modal__footer ${footerClass}`}>{footer}</footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nexport const Modal = (props) => {\r\n  return (\r\n    <Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames='modal'\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from \"../../utils/validators.js\";\r\nimport \"../../../css/shared/FormElements/Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\": {\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.value || \"\",\r\n    isTouched: false,\r\n    isValid: props.isValid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\",\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"],"sourceRoot":""}