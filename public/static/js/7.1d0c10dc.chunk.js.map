{"version":3,"sources":["places/pages/UpdatePlace.jsx","shared/components/FormElements/Button.jsx","shared/hooks/http-hook.js","shared/components/UIElements/Modal.jsx","shared/components/UIElements/ErrorModal.jsx","shared/utils/validators.js.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/hooks/form-hook.js","shared/components/FormElements/Input.jsx"],"names":["UpdatePlace","match","userId","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useState","place","setPlace","placeId","params","useForm","title","value","isValid","description","formState","inputHandler","setFormData","useEffect","a","process","res","getPlaceById","err","history","useHistory","placeUpdateSubmitHandler","e","preventDefault","body","inputs","push","console","log","className","asOverlay","onClear","onSubmit","type","element","id","placeholder","label","validators","VALIDATOR_REQUIRE","errorText","onInput","valid","disabled","Button","props","href","size","inverse","danger","children","to","exact","onClick","token","setLoading","setError","config","headers","authToken","useCallback","url","reqMethod","axios","post","get","patch","delete","data","response","message","ModalOverlay","style","headerClass","header","contentClass","footerClass","footer","content","ReactDOM","createPortal","document","getElementById","Modal","show","onCancel","in","mountOnEnter","unmountOnExit","timeout","classNames","ErrorModal","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","_e","f","TypeError","normalCompletion","didErr","step","next","_e2","validator","trim","test","formReducer","state","action","formIsValid","inputId","initialInputs","initialFormValidity","useReducer","dispatch","inputData","formValidity","inputReducer","isTouched","Input","inputState","changeHandler","event","target","touchHandler","onChange","onBlur","rows","htmlFor"],"mappings":"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","file":"static/js/7.1d0c10dc.chunk.js","sourcesContent":["import React, { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { AuthContext } from \"../../shared/context/authContext\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH,\r\n} from \"../../shared/utils/validators.js\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\n\r\nimport \"../../css/places/pages/PlaceForm.css\";\r\n\r\nexport const UpdatePlace = ({ match }) => {\r\n  const authContext = useContext(AuthContext);\r\n  const { userId } = authContext;\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [place, setPlace] = useState(null);\r\n\r\n  const placeId = match.params.placeId;\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const getPlaceById = async () => {\r\n        const res = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\r\n          \"get\"\r\n        );\r\n        setPlace(res);\r\n      };\r\n      getPlaceById();\r\n    } catch (err) {}\r\n  }, [sendRequest]);\r\n  useEffect(() => {\r\n    if (place) {\r\n      setFormData(\r\n        {\r\n          title: {\r\n            value: place.title,\r\n            isValid: true,\r\n          },\r\n          description: {\r\n            value: place.description,\r\n            isValid: true,\r\n          },\r\n        },\r\n        true\r\n      );\r\n    }\r\n  }, [place]);\r\n\r\n  const history = useHistory();\r\n  const placeUpdateSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = {\r\n        title: formState.inputs.title.value,\r\n        description: formState.inputs.description.value,\r\n      };\r\n      const res = await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\r\n        \"patch\",\r\n        body\r\n      );\r\n      if (res) {\r\n        history.push(`/${userId}/places`);\r\n      }\r\n    } catch (err) {}\r\n  };\r\n  console.log(formState.isValid);\r\n\r\n  return isLoading ? (\r\n    <div className='center'>\r\n      <LoadingSpinner asOverlay />\r\n    </div>\r\n  ) : (\r\n    <Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {!isLoading && formState.inputs.title.value !== \"\" && (\r\n        <form className='place-form' onSubmit={placeUpdateSubmitHandler}>\r\n          <Input\r\n            type='text'\r\n            element='input'\r\n            id='title'\r\n            placeholder='Title'\r\n            label='Title'\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText='Please enter a valid title'\r\n            onInput={inputHandler}\r\n            value={formState.inputs.title.value}\r\n            valid={formState.inputs.title.isValid}\r\n          />\r\n\r\n          <Input\r\n            element='textarea'\r\n            id='description'\r\n            placeholder='Description'\r\n            label='Description'\r\n            validators={[VALIDATOR_REQUIRE(5)]}\r\n            errorText='Please enter a valid description (minimum 5 characters)'\r\n            onInput={inputHandler}\r\n            value={formState.inputs.description.value}\r\n            valid={formState.inputs.description.isValid}\r\n          />\r\n          <Button type='submit' disabled={formState.isValid}>\r\n            Update Place\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdatePlace;\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"../../../css/shared/FormElements/Button.css\";\n\nconst Button = (props) => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || \"default\"} ${\n          props.inverse && \"button--inverse\"\n        } ${props.danger && \"button--danger\"}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || \"default\"} ${\n          props.inverse && \"button--inverse\"\n        } ${props.danger && \"button--danger\"}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || \"default\"} ${\n        props.inverse && \"button--inverse\"\n      } ${props.danger && \"button--danger\"}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useState, useCallback, useRef, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { TokenExpiredError } from \"jsonwebtoken\";\r\nimport { AuthContext } from \"../../shared/context/authContext\";\r\n\r\nexport const useHttpClient = () => {\r\n  const authContext = useContext(AuthContext);\r\n  const { token } = authContext;\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  //const activeHttpRequest = useRef([]);\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n  };\r\n  const authToken = {\r\n    headers: {\r\n      \"x-auth-token\": token,\r\n    },\r\n  };\r\n\r\n  const sendRequest = useCallback(async (url, reqMethod, body = null) => {\r\n    setLoading(true);\r\n    // @todo -> HttpAbortController\r\n    try {\r\n      let res;\r\n      if (reqMethod === \"post\") {\r\n        res = await axios.post(url, body, config);\r\n      } else if (reqMethod === \"get\") {\r\n        res = await axios.get(url);\r\n      } else if (reqMethod === \"patch\") {\r\n        res = await axios.patch(url, body, config);\r\n      } else if (reqMethod === \"delete\") {\r\n        res = await axios.delete(url, authToken);\r\n        console.log(res);\r\n      } else {\r\n        console.log(\"no request match\");\r\n      }\r\n      setLoading(false);\r\n      return res.data;\r\n    } catch (err) {\r\n      console.error(err.response.data);\r\n      setLoading(false);\r\n      setError(err.response.data.message);\r\n      throw err.response.data;\r\n    }\r\n  }, []);\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n  return {\r\n    isLoading,\r\n    error,\r\n    sendRequest,\r\n    clearError,\r\n  };\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n// components //\r\nimport Backdrop from \"./Backdrop\";\r\n\r\nimport \"../../../css/shared/UIElements/Modal.css\";\r\n\r\nconst ModalOverlay = ({\r\n  className,\r\n  style,\r\n  headerClass,\r\n  header,\r\n  onSubmit,\r\n  contentClass,\r\n  footerClass,\r\n  footer,\r\n  children,\r\n}) => {\r\n  const content = (\r\n    <div className={`modal ${className}`} style={{ style }}>\r\n      <header className={`modal__header ${headerClass}`}>\r\n        <h2> {header} </h2>\r\n      </header>\r\n      <form onSubmit={onSubmit ? onSubmit : (e) => e.preventDefault()}>\r\n        <div className={`modal__content ${contentClass}`}>{children}</div>\r\n        <footer className={`modal__footer ${footerClass}`}>{footer}</footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nexport const Modal = (props) => {\r\n  return (\r\n    <Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames='modal'\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from \"../../utils/validators.js\";\r\nimport \"../../../css/shared/FormElements/Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\": {\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.value || \"\",\r\n    isTouched: false,\r\n    isValid: props.isValid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\",\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"],"sourceRoot":""}