{"version":3,"sources":["shared/context/authContext.js","shared/components/UIElements/LoadingSpinner.jsx","shared/components/UIElements/Backdrop.jsx","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.jsx","shared/components/Navigation/NavLinks.jsx","shared/components/Navigation/SideDrawer.jsx","shared/components/Navigation/MainNavigation.jsx","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","useAuth","useState","isToken","setToken","setUserId","tokenExpDate","setTokenExpDate","loginUser","useCallback","history","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","push","removeItem","useEffect","userData","parse","getItem","remainingTime","setTimeout","clearTimeout","MainHeader","children","withRouter","match","authContext","useContext","exact","to","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","drawerState","toggleDrawerState","hideDrawer","e","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Authenticate","App","routes","path","component","Provider","value","fallback","render","StrictMode"],"mappings":"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","file":"static/js/main.27f0e099.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null,\r\n  token: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import React from \"react\";\n\nimport \"../../../css/shared/UIElements/LoadingSpinner.css\";\n\nconst LoadingSpinner = (props) => {\n  return (\n    <div className={`${props.asOverlay && \"loading-spinner__overlay\"}`}>\n      <div className='lds-dual-ring'></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"../../../css/shared/UIElements/Backdrop.css\";\n\nconst Backdrop = (props) => {\n  return ReactDOM.createPortal(\n    <div className='backdrop' onClick={props.onClick}></div>,\n    document.getElementById(\"backdrop-hook\")\n  );\n};\n\nexport default Backdrop;\n","import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nconst useAuth = () => {\r\n  const [isToken, setToken] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  const [tokenExpDate, setTokenExpDate] = useState();\r\n\r\n  const loginUser = useCallback((history, uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    const tokenExpDate = new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpDate(tokenExpDate);\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token: token,\r\n        expiration: expirationDate || tokenExpDate.toISOString(),\r\n      })\r\n    );\r\n    if (history) {\r\n      history.push(\"/\");\r\n    }\r\n  }, []);\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setUserId(null);\r\n    setTokenExpDate(null);\r\n    localStorage.removeItem(\"userData\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (\r\n      userData &&\r\n      userData.token &&\r\n      new Date(userData.expiration) > new Date()\r\n    ) {\r\n      loginUser(\r\n        null,\r\n        userData.userId,\r\n        userData.token,\r\n        new Date(userData.expiration)\r\n      );\r\n    }\r\n  }, [loginUser]);\r\n\r\n  useEffect(() => {\r\n    if (isToken && tokenExpDate) {\r\n      const remainingTime = tokenExpDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [isToken, logout, tokenExpDate]);\r\n\r\n  return {\r\n    token: isToken,\r\n    login: loginUser,\r\n    logout,\r\n    userId,\r\n  };\r\n};\r\n\r\nexport default useAuth;\r\n","import React from \"react\";\r\n\r\nimport \"../../../css/shared/Navigation/MainHeader.css\";\r\n\r\nconst MainHeader = (props) => {\r\n  return <header className='main-header'>{props.children}</header>;\r\n};\r\n\r\nexport default MainHeader;\r\n","import React, { Fragment, useContext } from \"react\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../../shared/context/authContext\";\r\n\r\nimport \"../../../css/shared/Navigation/NavLinks.css\";\r\nconst NavLinks = ({ match }) => {\r\n  const authContext = useContext(AuthContext);\r\n  const { isLoggedIn, login, logout, userId } = authContext;\r\n  return (\r\n    <ul className='nav-links'>\r\n      <li>\r\n        <NavLink exact to='/'>\r\n          {\" \"}\r\n          All Users{\" \"}\r\n        </NavLink>\r\n      </li>\r\n      {isLoggedIn && (\r\n        <Fragment>\r\n          <li>\r\n            <NavLink to={`/${userId}/places`}> My Places </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to='/places/new'> Add Place </NavLink>\r\n          </li>\r\n\r\n          <li>\r\n            <NavLink to='/auth' onClick={logout}>\r\n              {\" \"}\r\n              Logout{\" \"}\r\n            </NavLink>\r\n          </li>\r\n        </Fragment>\r\n      )}\r\n\r\n      {!isLoggedIn && (\r\n        <li>\r\n          <NavLink to='/auth'> Auth </NavLink>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default withRouter(NavLinks);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport \"../../../css/shared/Navigation/SideDrawer.css\";\r\n\r\nconst SideDrawer = (props) => {\r\n  const content = (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames='slide-in-left'\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside className='side-drawer' onClick={props.onClick}>\r\n        {props.children}\r\n      </aside>\r\n    </CSSTransition>\r\n  );\r\n  return ReactDOM.createPortal(\r\n    content,\r\n    document.getElementById(\"sidebar-hook\")\r\n  );\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// conponents //\r\nimport MainHeader from \"./MainHeader\";\r\nimport NavLinks from \"./NavLinks\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport Backdrop from \"../UIElements/Backdrop\";\r\n\r\nimport \"../../../css/shared/Navigation/MainNavigation.css\";\r\n\r\nconst MainNavigation = () => {\r\n  const [drawerState, toggleDrawerState] = useState(false);\r\n\r\n  const showDrawer = (e) => {\r\n    toggleDrawerState(true);\r\n  };\r\n  const hideDrawer = (e) => {\r\n    toggleDrawerState(false);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      {drawerState && <Backdrop onClick={hideDrawer} />}\r\n      <SideDrawer show={drawerState} onClick={hideDrawer}>\r\n        <nav className='main-navigation__drawer-nav'>\r\n          <NavLinks />\r\n        </nav>\r\n      </SideDrawer>\r\n\r\n      <MainHeader>\r\n        <button className='main-navigation__menu-btn' onClick={showDrawer}>\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </button>\r\n\r\n        <h1 className='main-navigation__title'>\r\n          <Link to='/'>YourPlaces</Link>\r\n        </h1>\r\n\r\n        <nav className='main-navigation__header-nav'>\r\n          <NavLinks />\r\n        </nav>\r\n      </MainHeader>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React, { Fragment, Suspense } from \"react\";\nimport useAuth from \"./shared/hooks/auth-hook\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nimport { AuthContext } from \"./shared/context/authContext\";\n\nimport \"./App.css\";\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\n// components //\n// import Users from \"./users/pages/Users\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\n// import NewPlace from \"./places/pages/NewPlace\";\n// import UserPlaces from \"./places/pages/UserPlaces\";\n// import UpdatePlace from \"./places/pages/UpdatePlace\";\n// import Authenticate from \"./users/pages/Authenticate\";\n\nconst Users = React.lazy(() => import(\"./users/pages/Users\"));\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\nconst Authenticate = React.lazy(() => import(\"./users/pages/Authenticate\"));\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Fragment>\n        <Switch>\n          <Route exact path='/' component={Users} />\n          <Route exact path='/places/new' component={NewPlace} />\n          <Route exact path='/places/:placeId' component={UpdatePlace} />\n          <Route exact path='/:userId/places' component={UserPlaces} />\n\n          <Redirect to='/' />\n        </Switch>\n      </Fragment>\n    );\n  } else {\n    routes = (\n      <Fragment>\n        <Switch>\n          <Route exact path='/' component={Users} />\n          <Route exact path='/:userId/places' component={UserPlaces} />\n          <Route exact path='/auth' component={Authenticate} />\n\n          <Redirect to='/auth'></Redirect>\n        </Switch>\n      </Fragment>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{ isLoggedIn: !!token, token, login, logout, userId }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className='center'>\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}